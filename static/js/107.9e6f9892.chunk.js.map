{"version":3,"file":"static/js/107.9e6f9892.chunk.js","mappings":"gLACA,GAAgB,gBAAkB,8BAA8B,WAAa,yBAAyB,iBAAmB,+BAA+B,iBAAmB,+BAA+B,cAAgB,4BAA4B,YAAc,0BAA0B,MAAQ,oBAAoB,WAAa,yBAAyB,SAAW,uBAAuB,4BAA8B,0CAA0C,YAAc,0BAA0B,WAAa,yBAAyB,KAAO,oB,yFCElhBA,E,MAAeC,GAAAA,OAAa,CACrCC,QAAS,6BAGAC,EAAU,WAGf,OAAOH,EAAaI,IAAb,eACFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAJ1BJ,EAAU,SAOXK,GACJ,OAAOR,EAAaI,IAAb,4BAAwDI,EAAxD,YACFH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,qCCyCvC,GAAeE,EAAAA,EAAAA,IA7CF,WAET,IAAMC,GAAYC,EAAAA,EAAAA,KAAgD,SAAAC,GAAK,OAAIA,EAAMC,eAC1EC,GAAcH,EAAAA,EAAAA,KAA+C,SAAAC,GAAK,OAAIA,EAAMG,cAA5ED,WACDE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACNF,ECdsB,mCAAgB,WAAMA,GAAN,oFAC1CA,GAASG,EAAAA,EAAAA,IAAiB,IADgB,SAEnBhB,IAFmB,OAEpCG,EAFoC,OAGtCc,EAA2B,GAHW,uBAKlCC,GALkC,sEAMlCA,EAAIf,EAASgB,OAAS,GANY,gCAO5BnB,EAAgBG,EAASe,GAAGE,YAC7BlB,MAAK,SAAAmB,GACF,IAAMC,GAAa,kBAAOD,GAAP,IAAYE,GAAIpB,EAASe,KAC5CD,EAAKO,KAAKF,MAVgB,6CAa5BtB,EAAgBG,EAASe,GAAGE,YAC7BlB,MAAK,SAAAmB,GACF,IAAMC,GAAa,kBAAOD,GAAP,IAAYE,GAAIpB,EAASe,KAC5CD,EAAKO,KAAKF,GACVT,GAASG,EAAAA,EAAAA,IAAiB,OAjBA,0CAKlCE,EAAI,EAL8B,YAK3BA,EAAIf,EAASgB,QALc,0CAKlCD,GALkC,eAKNA,IALM,uBAsB1CL,GAASY,EAAAA,EAAAA,GAAUR,IAtBuB,4CAAhB,yDDevB,IAGH,IAAMS,EAAanB,EAAUoB,KAAI,SAACC,EAAIV,GAAL,OAC7B,SAAC,KAAD,CAASW,GAAE,gBAAWD,EAAGL,IAAzB,UACI,iBAAKO,UAAWC,EAAAA,iBAAhB,WACI,gBAAKD,UAAWC,EAAAA,cAAhB,UACI,gBAAKD,UAAWC,EAAAA,UAAaC,IAAKJ,EAAGK,IAAKC,IAAKN,EAAGxB,UAEtD,iBAAK0B,UAAWC,EAAAA,4BAAhB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,UACI,gBAAKD,UAAWC,EAAAA,MAAhB,SAA0BH,EAAGO,WAEjC,gBAAKL,UAAWC,EAAAA,YAAeK,wBAAyB,CAACC,OAAQT,EAAGU,kBAT5CpB,MAgBxC,OAAIP,GAAmB,SAAC4B,EAAA,EAAD,KAGnB,iCACI,gBAAKT,UAAWC,EAAAA,gBAAhB,UACI,gBAAKD,UAAWC,EAAAA,WAAhB,SACKL,OAIT,gBAAKI,UAAWC,EAAAA,sBAAhB,UACI,SAACS,EAAA,EAAD","sources":["webpack://Social-Network/./src/components/News/News.module.css?fa32","Api/NewsAPI.ts","components/News/News.tsx","Thunk/News_Thunk.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main_news_block\":\"News_main_news_block__Soj9q\",\"block_news\":\"News_block_news__r99HE\",\"block_tools_news\":\"News_block_tools_news__bH2--\",\"small_block_news\":\"News_small_block_news__TxbpC\",\"image_preview\":\"News_image_preview__eeiYH\",\"title_block\":\"News_title_block__r+ORC\",\"title\":\"News_title__DOnj7\",\"photo_news\":\"News_photo_news__CFnoI\",\"img_news\":\"News_img_news__zvdTU\",\"block_title_and_description\":\"News_block_title_and_description__2yczC\",\"description\":\"News_description__aUT7x\",\"date_block\":\"News_date_block__GFcdt\",\"date\":\"News_date__SII9+\"};","import axios from \"axios\";\r\nimport {NewsResponseType} from \"../Reducers-Store/News-reducer\";\r\n\r\nexport const instanceNews = axios.create({\r\n    baseURL: \"https://virtualbrest.ru/\",\r\n})\r\n\r\nexport const NewsAPI = {\r\n\r\n    getFirstNews() {\r\n        return instanceNews.get<string[]>(`android.php`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getNews(numberNews: string) {\r\n        return instanceNews.get<NewsResponseType>(`android.php?pdaid=${numberNews}&json=1`)\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport s from \"./News.module.css\";\r\nimport {NewsInitialStateType} from \"../../Reducers-Store/News-reducer\";\r\nimport {AuthRedirect} from \"../../HOC/AuthRedirect\";\r\nimport {Preloader} from \"../SmallComponents/Preloader/Preloader\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Reducers-Store/store\";\r\nimport {AppInitialStateType} from \"../../Reducers-Store/App-reduser\";\r\nimport {getFirstNewsTC} from \"../../Thunk/News_Thunk\";\r\nimport {ArrowScroll} from \"../SmallComponents/ArrowScroll/ArrowScroll\";\r\n\r\nconst News = () => {\r\n\r\n    const stateNews = useSelector<AppStateType, NewsInitialStateType>(state => state.NewsReducer);\r\n    const {isFetching} = useSelector<AppStateType, AppInitialStateType>(state => state.AppReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getFirstNewsTC())\r\n    }, [])\r\n\r\n\r\n    const MapingNews = stateNews.map((el, i) => (\r\n        <NavLink to={`/news/${el.id}`} key={i}>\r\n            <div className={s.small_block_news}>\r\n                <div className={s.image_preview}>\r\n                    <img className={s.img_small} src={el.img} alt={el.data}/>\r\n                </div>\r\n                <div className={s.block_title_and_description}>\r\n                    <div className={s.title_block}>\r\n                        <div className={s.title}>{el.title}</div>\r\n                    </div>\r\n                    <div className={s.description} dangerouslySetInnerHTML={{__html: el.content}}/>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    ));\r\n\r\n\r\n    if (isFetching) return <Preloader/>\r\n\r\n    return (\r\n        <>\r\n            <div className={s.main_news_block}>\r\n                <div className={s.block_news}>\r\n                    {MapingNews}\r\n                </div>\r\n            </div>\r\n            {/*ARROW*/}\r\n            <div className={s.position_arrow_scroll}>\r\n                <ArrowScroll/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AuthRedirect(News);","import {AppThunk} from \"../Reducers-Store/store\";\r\nimport {NewsAPI} from \"../Api/NewsAPI\";\r\nimport {getNewsAC, NewsResponseType} from \"../Reducers-Store/News-reducer\";\r\nimport {isFetchingNewsAC} from \"../Reducers-Store/App-reduser\";\r\n\r\nexport const getFirstNewsTC = (): AppThunk => async dispatch => {\r\n    dispatch(isFetchingNewsAC(true));\r\n    const response = await NewsAPI.getFirstNews();\r\n    let news: NewsResponseType[] = []\r\n\r\n    for(let i = 0; i < response.length; i++){\r\n        if (i < response.length - 1) {\r\n            await NewsAPI.getNews(response[i].toString())\r\n                .then(res => {\r\n                    const responseAndId = {...res, id: response[i]}\r\n                    news.push(responseAndId)\r\n                })\r\n        } else {\r\n            await NewsAPI.getNews(response[i].toString())\r\n                .then(res => {\r\n                    const responseAndId = {...res, id: response[i]}\r\n                    news.push(responseAndId)\r\n                    dispatch(isFetchingNewsAC(false))\r\n                })\r\n        }\r\n    }\r\n\r\n    dispatch(getNewsAC(news))\r\n\r\n}\r\n\r\n\r\n"],"names":["instanceNews","axios","baseURL","NewsAPI","get","then","response","data","numberNews","AuthRedirect","stateNews","useSelector","state","NewsReducer","isFetching","AppReducer","dispatch","useDispatch","useEffect","isFetchingNewsAC","news","i","length","toString","res","responseAndId","id","push","getNewsAC","MapingNews","map","el","to","className","s","src","img","alt","title","dangerouslySetInnerHTML","__html","content","Preloader","ArrowScroll"],"sourceRoot":""}