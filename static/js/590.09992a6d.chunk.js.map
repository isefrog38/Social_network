{"version":3,"file":"static/js/590.09992a6d.chunk.js","mappings":"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","sources":["webpack://Social-Network/./src/components/Music/Music.module.css?1f90","Api/MusicAPI.ts","Thunk/Music_Thunk.ts","webpack://Social-Network/./src/components/Music/RenderResultSearchMusic/MusicOneSong.module.css?bb91","Utils/Functions.ts","Assets/CreateSVG/Bookmark.tsx","components/Music/DescriptionTrack/DescriptionTrack.tsx","components/Music/RenderResultSearchMusic/MusicResults.tsx","components/Music/Music.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputBlock\":\"Music_inputBlock__nLc-g\"};","import axios from \"axios\";\r\nimport {GlobalTypeMusic} from \"../Type/API-types/MusicTypes\";\r\n\r\nexport const instanceMusic = axios.create({\r\n    baseURL: \"https://itunes.apple.com/\",\r\n    withCredentials: true,\r\n    headers: {},\r\n});\r\n\r\n\r\nexport const MusicApi = {\r\n    getMusicSearchResult(title: string) {\r\n        return instanceMusic.get<GlobalTypeMusic>(`search?term=${title}`)\r\n            .then(response => response.data)\r\n    }\r\n};","import {AppThunk} from \"../Reducers-Store/store\";\r\nimport {MusicApi} from \"../Api/MusicAPI\";\r\nimport {setAllResultSearchAC} from \"../Reducers-Store/Music-reduser\";\r\n\r\n\r\nexport const MusicTC = (title: string): AppThunk => async dispatch => {\r\n    const response = await MusicApi.getMusicSearchResult(title)\r\n        dispatch(setAllResultSearchAC(response))\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main_page_class\":\"MusicOneSong_main_page_class__e-SM9\",\"background\":\"MusicOneSong_background__cwwyL\",\"image\":\"MusicOneSong_image__yoGp1\",\"close\":\"MusicOneSong_close__OVOOJ\",\"link\":\"MusicOneSong_link__5V4XU\",\"bookmark\":\"MusicOneSong_bookmark__MoGEZ\",\"bookmarkSave\":\"MusicOneSong_bookmarkSave__uLO9a\",\"album_tracks\":\"MusicOneSong_album_tracks__AqT7o\",\"album_info\":\"MusicOneSong_album_info__yVTOO\",\"album_art\":\"MusicOneSong_album_art__NvVJp\",\"play\":\"MusicOneSong_play__-Ekch\",\"album-details\":\"MusicOneSong_album-details__HVdyE\",\"album-tracks\":\"MusicOneSong_album-tracks__2V2Mx\",\"active_li\":\"MusicOneSong_active_li__gDIi+\",\"actions\":\"MusicOneSong_actions__qJjb7\",\"audio_block\":\"MusicOneSong_audio_block__nTkDr\",\"album-art\":\"MusicOneSong_album-art__gaVdV\"};","export function time (millis: number): string {\r\n    if (!millis) return \"0:00\";\r\n    let minutes = Math.floor(millis / 60000);\r\n    let seconds = +((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}","import React, {useState} from \"react\";\r\nimport s from \"../../components/Music/RenderResultSearchMusic/MusicOneSong.module.css\";\r\nimport {deleteBookmarksTrackAC, setBookmarksTrackAC} from \"../../Reducers-Store/Music-reduser\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ntype BookmarkType = {\r\n    trackId: number\r\n}\r\n\r\nexport const Bookmark = ({trackId}: BookmarkType) => {\r\n\r\n    const [onSave, setOnSave] = useState<\"save\" | \"notSave\">(\"notSave\");\r\n    const dispatch = useDispatch();\r\n\r\n    const onClickHandler = () => {\r\n        if (onSave === \"save\") {\r\n            setOnSave(\"notSave\");\r\n            dispatch(deleteBookmarksTrackAC(trackId));\r\n        } else {\r\n            setOnSave(\"save\");\r\n            dispatch(setBookmarksTrackAC(trackId));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={onSave !== \"save\" ? s.bookmark : s.bookmarkSave} onClick={onClickHandler}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#faa800\" height=\"24\"\r\n                 viewBox=\"0 0 24 24\"\r\n                 width=\"24\">\r\n                <path\r\n                    d=\"M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z\"/>\r\n                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}","import React, {ReactEventHandler, useState} from 'react';\r\nimport s from \"../RenderResultSearchMusic/MusicOneSong.module.css\";\r\nimport {ResultsMusicType} from \"../../../Type/API-types/MusicTypes\";\r\nimport {Bookmark} from \"../../../Assets/CreateSVG/Bookmark\";\r\n\r\ntype DescriptionTrackType = {\r\n    oneSong: ResultsMusicType\r\n    close: () => void\r\n}\r\n\r\nexport const DescriptionTrack = ({oneSong, close}: DescriptionTrackType) => {\r\n\r\n    const [play, setPlay] = useState<boolean>(false);\r\n\r\n    const onClick = () => {\r\n        setPlay(!play);\r\n    }\r\n\r\n    return (\r\n        <div className={s.album_info}>\r\n            <div className={s.close} onClick={close}>X</div>\r\n            <div className={s.album_art}><img\r\n                src={oneSong.artworkUrl100}\r\n                alt={oneSong.trackName}/>\r\n                <div className={s.actions}>\r\n                    <button className={s.play} onClick={onClick}>{!play ? \"Play\" : \"Pause\"}</button>\r\n                    <Bookmark trackId={oneSong.trackId}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.album_details}>\r\n                <h1>{oneSong.trackName}</h1>\r\n                <span>\r\n                            <span>{oneSong.primaryGenreName}</span>\r\n                            <p>\r\n                                <span>&copy; 2016 Atlantic Recording Corporation</span>\r\n                            </p>\r\n                    <a className={s.link} href={oneSong.artistViewUrl}>Album Link</a>\r\n                        </span>\r\n                <p>Unleashed is the tenth album by American Christian rock band Skillet, released on\r\n                    August 5,\r\n                    2016. The\r\n                    album was announced on May 20, 2016, and a lyric video was released for the track\r\n                    \"Feel\r\n                    Invincible\" at\r\n                    the same time on the band's YouTube channel. Six days later, the band released a\r\n                    lyric video\r\n                    for the\r\n                    track \"Stars\" on their YouTube channel.</p>\r\n                <p>\r\n                    <audio key={oneSong.trackId} controls className={s.audio_block}>\r\n                        <source src={oneSong.previewUrl} type=\"audio/mpeg\"/>\r\n                    </audio>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {useState} from 'react';\r\nimport s from \"./MusicOneSong.module.css\";\r\nimport {ResultsMusicType} from \"../../../Type/API-types/MusicTypes\";\r\nimport {time} from \"../../../Utils/Functions\";\r\nimport {DescriptionTrack} from \"../DescriptionTrack/DescriptionTrack\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setShowInfoArtistAC} from \"../../../Reducers-Store/Music-reduser\";\r\n\r\ntype MusicResultsType = {\r\n    state: ResultsMusicType[]\r\n    trackInfo: ResultsMusicType | null | undefined\r\n}\r\n\r\nexport const MusicResults = ({state, trackInfo}: MusicResultsType) => {\r\n\r\n    const [visible, setVisible] = useState<boolean>(false);\r\n    const [active, setActive] = useState<number | null>(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const openDescription = (track: ResultsMusicType) => {\r\n        dispatch(setShowInfoArtistAC(track));\r\n        setActive(track.trackId);\r\n        if (track) {\r\n            setVisible(true);\r\n        }\r\n    }\r\n\r\n    const close = () => {\r\n        dispatch(setShowInfoArtistAC(null));\r\n        setVisible(false);\r\n        setActive(null);\r\n    }\r\n\r\n    return (\r\n        <div className={s.main_page_class}>\r\n            <div className={s.background}/>\r\n            <section>\r\n                {trackInfo && visible && <DescriptionTrack oneSong={trackInfo}\r\n                                                           close={close}\r\n                />}\r\n                <div className={s.album_tracks}>\r\n                    <ol>\r\n                        {state.map(el => <Element key={el.trackId}\r\n                                                  active={active}\r\n                                                  track={el}\r\n                                                  setCurrentId={openDescription}\r\n                        />)}\r\n                    </ol>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\ntype PropsTypeElement = {\r\n    track: ResultsMusicType\r\n    active: number | null\r\n    setCurrentId: (track: ResultsMusicType) => void\r\n}\r\n\r\nconst Element = ({track, active, setCurrentId}: PropsTypeElement) => {\r\n\r\n    let activeId = track.trackId;\r\n\r\n    const click = () => {\r\n        setCurrentId(track);\r\n    }\r\n\r\n    return (\r\n        <li onClick={click} className={activeId === active ? s.active_li : ''}>\r\n            <span><img className={s.image} src={track.artworkUrl100} alt={track.trackName}/></span>\r\n            <span>{track.artistName} ({track.trackName})</span>\r\n            <span>{time(track.trackTimeMillis)}</span>\r\n        </li>\r\n    )\r\n}","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport s from './Music.module.css'\r\nimport {AuthRedirect} from \"../../HOC/AuthRedirect\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Reducers-Store/store\";\r\nimport {MusicInitialStateType} from \"../../Reducers-Store/Music-reduser\";\r\nimport {MusicTC} from \"../../Thunk/Music_Thunk\";\r\nimport {InputForm} from \"../SmallComponents/InputForm/InputForm\";\r\nimport {MusicResults} from \"./RenderResultSearchMusic/MusicResults\";\r\n\r\n\r\nconst Music = () => {\r\n\r\n    const [value, setValue] = useState<string>('');\r\n    const state = useSelector<AppStateType, MusicInitialStateType>(state => state.MusicReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(MusicTC(\"top 100\"))\r\n    }, [])\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    };\r\n\r\n    const onClick = () => {\r\n        dispatch(MusicTC(value));\r\n    };\r\n\r\n    return (\r\n        <div className={s.rootDiv}>\r\n            <div className={s.inputBlock}>\r\n                <InputForm onChangeHandler={onChange}\r\n                           onClickHandler={onClick}\r\n                           value={value}\r\n                           placeholderName={\"Search Song\"}\r\n                           buttonName={\"Search\"}\r\n                />\r\n            </div>\r\n\r\n            {state.results.length !== 0 && <MusicResults state={state.results}\r\n                                                         trackInfo={state.showInfo}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRedirect(Music);\r\n"],"names":["instanceMusic","axios","baseURL","withCredentials","headers","MusicApi","title","get","then","response","data","MusicTC","dispatch","setAllResultSearchAC","time","millis","minutes","Math","floor","seconds","toFixed","Bookmark","trackId","useState","onSave","setOnSave","useDispatch","className","s","onClick","deleteBookmarksTrackAC","setBookmarksTrackAC","xmlns","fill","height","viewBox","width","d","DescriptionTrack","oneSong","close","play","setPlay","src","artworkUrl100","alt","trackName","primaryGenreName","href","artistViewUrl","controls","previewUrl","type","MusicResults","state","trackInfo","visible","setVisible","active","setActive","openDescription","track","setShowInfoArtistAC","map","el","Element","setCurrentId","activeId","artistName","trackTimeMillis","AuthRedirect","value","setValue","useSelector","MusicReducer","useEffect","InputForm","onChangeHandler","e","currentTarget","onClickHandler","placeholderName","buttonName","results","length","showInfo"],"sourceRoot":""}